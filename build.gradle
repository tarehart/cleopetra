/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

sourceCompatibility = 8
targetCompatibility = 8

// Define the main class for the application
mainClassName = 'dk.aau.cs.ds306e18.tournament.Main'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Using GSON for serializing objects for transfer and storage
    compile 'com.google.code.gson:gson:2.8.5'

    // The RLBot framework
    compile 'org.rlbot.commons:framework:1.+'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    // Adding ControlsFX dependency. (Version 8.4 due to Java 8)
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.14'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// Setup modules
sourceSets {
    main.java.srcDirs = ['src']
    main.resources.srcDirs = ['src']

    test.java.srcDirs = ['test']
    test.resources.srcDirs = ['test']
}

// Build a fat jar
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'dk.aau.cs.ds306e18.tournament.Main'
    }
    baseName = 'tournamentsystem'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}